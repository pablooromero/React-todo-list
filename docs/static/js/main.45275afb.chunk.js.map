{"version":3,"sources":["context/TaskListContext.js","components/Header.js","components/TaskForm.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTask","map","children","Header","className","TaskForm","useContext","setTitle","onSubmit","e","preventDefault","trim","length","onChange","target","type","placeholder","onClick","Task","TaskList","App","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAkBC,0BAwDhBC,EAtDiB,SAACC,GAC/B,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAElE,EAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC5C,CAACA,IA4BJ,OACE,cAACV,EAAgBiB,SAAjB,CACEC,MAAO,CACLR,QACAS,QA9BU,SAACC,GACfT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,QAAOC,GAAIC,mBA8B7BC,WA3Ba,SAACF,GAClBV,EAASD,EAAMc,QAAO,SAACC,GAAD,OAAUA,EAAKJ,KAAOA,OA2BxCK,UAxBY,WAChBf,EAAS,KAwBLgB,SArBW,SAACN,GAChB,IAAMO,EAAOlB,EAAMmB,MAAK,SAACJ,GAAD,OAAUA,EAAKJ,KAAOA,KAC9CR,EAAYe,IAoBRE,SAjBW,SAACV,EAAOC,GACvB,IAAMU,EAAUrB,EAAMsB,KAAI,SAACP,GAAD,OACxBA,EAAKJ,KAAOA,EAAK,CAAED,QAAOC,MAAOI,KAGnCd,EAASoB,GACTlB,EAAY,OAYRD,YARJ,SAWGT,EAAM8B,YC5CEC,EARA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,8CCkDSC,EApDE,WACf,MACEC,qBAAWrC,GADLmB,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,UAAWd,EAA5B,EAA4BA,SAAUkB,EAAtC,EAAsCA,SAGtC,EAA0BrB,mBAAS,IAAnC,mBAAOW,EAAP,KAAckB,EAAd,KA2BA,OARAxB,qBAAU,WAENwB,EADE1B,EACOA,EAASQ,MAET,MAEV,CAACR,IAGF,uBAAM2B,SAtBa,SAACC,GACpBA,EAAEC,iBACErB,EAAMsB,OAAOC,QAAU,IAGV,OAAb/B,GACFO,EAAQC,GACRkB,EAAS,KAETR,EAASV,EAAOR,EAASS,MAaGc,UAAU,OAAxC,UACE,uBACES,SA5Be,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBP,EAASO,EAAO3B,QA4BZA,MAAOE,EACP0B,KAAK,OACLX,UAAU,aACVY,YAAY,uBAEd,sBAAKZ,UAAU,UAAf,UACE,wBAAQW,KAAK,SAASX,UAAU,mBAAhC,SACGvB,EAAW,eAAiB,YAE/B,wBAAQoC,QAAStB,EAAWS,UAAU,gBAAtC,4BCvBOc,EArBF,SAAC,GAAc,IAAZxB,EAAW,EAAXA,KACd,EAAiCY,qBAAWrC,GAApCuB,EAAR,EAAQA,WAAYI,EAApB,EAAoBA,SAEpB,OACE,qBAAIQ,UAAU,YAAd,UACE,+BAAOV,EAAKL,QACZ,gCACE,wBACE4B,QAAS,kBAAMzB,EAAWE,EAAKJ,KAC/Bc,UAAU,sBAFZ,SAIE,mBAAGA,UAAU,wBAEf,wBAAQa,QAAS,kBAAMrB,EAASF,EAAKJ,KAAKc,UAAU,oBAApD,SACE,mBAAGA,UAAU,yBCKRe,EAlBE,WACf,IAAQxC,EAAU2B,qBAAWrC,GAArBU,MAER,OACE,8BACGA,EAAMiC,OACL,oBAAIR,UAAU,OAAd,SACGzB,EAAMsB,KAAI,SAACP,GACV,OAAO,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKJ,SAIvC,qBAAKc,UAAU,WAAf,8BCOOgB,EAhBH,WACV,OACE,cAAC,EAAD,UACE,qBAAKhB,UAAU,YAAf,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,eCXZiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.45275afb.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(initialState);\r\n\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (title) => {\r\n    setTasks([...tasks, { title, id: uuid() }]);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const clearList = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  const findItem = (id) => {\r\n    const item = tasks.find((task) => task.id === id);\r\n    setEditItem(item);\r\n  };\r\n\r\n  const editTask = (title, id) => {\r\n    const newTask = tasks.map((task) =>\r\n      task.id === id ? { title, id } : task\r\n    );\r\n\r\n    setTasks(newTask);\r\n    setEditItem(null);\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editItem,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>ToDo List</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearList, editItem, editTask } =\r\n    useContext(TaskListContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleChange = ({ target }) => {\r\n    setTitle(target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title.trim().length <= 1) {\r\n      return;\r\n    }\r\n    if (editItem === null) {\r\n      addTask(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      editTask(title, editItem.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n  }, [editItem]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        onChange={handleChange}\r\n        value={title}\r\n        type=\"text\"\r\n        className=\"task-input\"\r\n        placeholder=\"AÃ±adir tarea...\"\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">\r\n          {editItem ? \"Editar Tarea\" : \"Agregar\"}\r\n        </button>\r\n        <button onClick={clearList} className=\"btn clear-btn\">\r\n          Limpiar\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst Task = ({ task }) => {\r\n  const { removeTask, findItem } = useContext(TaskListContext);\r\n\r\n  return (\r\n    <li className=\"list-item\">\r\n      <span>{task.title}</span>\r\n      <div>\r\n        <button\r\n          onClick={() => removeTask(task.id)}\r\n          className=\"btn-delete task-btn\"\r\n        >\r\n          <i className=\"uil uil-trash-alt\"></i>\r\n        </button>\r\n        <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\r\n          <i className=\"uil uil-pen\"></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n\r\n  return (\r\n    <div>\r\n      {tasks.length ? (\r\n        <ul className=\"list\">\r\n          {tasks.map((task) => {\r\n            return <Task task={task} key={task.id} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"no-tasks\">No hay tareas</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport TaskListContextProvider from \"../context/TaskListContext\";\r\nimport Header from \"./Header\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <TaskListContextProvider>\r\n      <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n          <Header />\r\n          <div className=\"main\">\r\n            <TaskForm />\r\n            <TaskList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </TaskListContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}